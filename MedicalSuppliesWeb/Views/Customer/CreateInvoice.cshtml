@model MedicalSuppliesWeb.ViewModels.Customer.CustomerInvoiceVm

<!DOCTYPE html>
<html lang="en">
<head>
    <link rel="stylesheet" href="~/css/shared-style.css" />
</head>


<body>

<div class="row">
    <partial name="_LeftColumn" />

    <div class="col-md-8 column">

        <partial name="_SearchBox" />


            @*//following is the dynamic content of this page, it changes on each other page view redirected from here.
        everything else remain the same*@




        <h2 style="padding-left:280px; padding-top:80px; padding-bottom:30px">CUSTOMER INVOICE</h2>

        <form method="post" asp-action="CreateInvoice">


            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="customerId">Customer ID:</label>
                                <input type="text" class="form-control" id="customerId" name="CustomerId" value="" />
                            </div>
                        </div>


                        <div class="col-md-5">
                            <div class="form-group">
                                <label for="customerName">Customer Name:</label>
                                @*<input type="text" class="form-control" id="customerName" name="Date" value="@Model.CustomerName" />*@
                                    <input type="text" class="form-control" id="customerName" name="CustomerName" value="" readonly />
                            </div>
                        </div>


                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="orderNo">Order No:</label>
                                    <input type="text" class="form-control" id="orderNo" name="OrderNo" onchange="return getCustomerOrderDetails();" />
                            </div>
                        </div>



                        <div class="col-md-3">
                            <div class="form-group">
                                <label for="invoiceDate">Invoice Date:</label>
                                <input type="date" class="form-control" id="invoiceDate" name="Date" value="" />
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="shippingAddress">Shipping Address:</label>
                                @*<textarea class="form-control" id="shippingAddress" name="ShippingAddress" rows="3">@Model.ShippingAddress</textarea>*@
                                    <textarea class="form-control" id="shippingAddress" name="ShippingAddress" rows="3" readonly></textarea>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="billingAddress">Billing Address:</label>
                                <textarea class="form-control" id="billingAddress" name="BillingAddress" rows="3">@Model.BillingAddress</textarea>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" id="sameAddressCheckbox">
                                <label class="form-check-label" for="sameAddressCheckbox">Same as Shipping Address</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>         



            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Items</h5>
                    <div id="product-container">
                        <!-- Initial product field -->
                        <div class="order-item">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label for="productName">Product:</label>
                                        <input type="text" class="form-control product-name" name="CustomerInvoiceItems[0].ProductName" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="quantity">Quantity:</label>
                                        <input type="text" class="form-control quantity" name="CustomerInvoiceItems[0].Quantity" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="unitPrice">Unit Price:</label>
                                        <input type="text" class="form-control unit-price" name="CustomerInvoiceItems[0].UnitPrice" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group">
                                        <label for="lineTotal">Line total:</label>
                                        <input type="text" class="form-control line-total" name="CustomerInvoiceItems[0].LineTotal" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div style="display: flex; justify-content: flex-end;">
                        <button type="button" id="add-product" class="btn btn-outline-dark btn-sm"> + </button>
                    </div>


                </div>
            </div>


            <div class="card">
                <div class="card-body">

                    <div class="row">
                        <div class="col-md-4">

                            <div class="form-group">
                                <label for="invoiceTotal">Invoice Total:</label>
                                @*<input type="text" class="form-control" id="taxRate" name="InvoiceTotal" value="@Model.TotalAmount" />*@
                                    <input type="text" class="form-control" id="invoiceTotal" name="InvoiceTotal" value="" readonly />
                            </div>

                        </div>

                        <div class="col-md-4">
                            <div class="form-group">
                                <label for="taxRate">Tax Rate:</label>
                                <input type="text" class="form-control" id="taxRate" name="TaxRate" value="@Model.TaxRate" />
                            </div>
                        </div>

                        <div class="col-md-4">

                            <div class="form-group">
                                <label for="taxAmount">Tax Amount:</label>
                                <input type="text" class="form-control" id="taxAmount" name="TaxAmount" value="@Model.TaxAmount" />
                            </div>
                        </div>

                       

                    </div>

                    <div class="row">

                            
                            <div class="col-md-4">

                                <div class="form-group">
                                    <label for="discount">Discount:</label>
                                    <input type="text" class="form-control" id="discount" name="Discount" value="@Model.DiscountAmount" />
                                </div>
                            </div>



                        
                        
                            <div class="col-md-4">

                                <div class="form-group">
                                    <label for="grandTotal">Grand Total:</label>
                                    <input type="text" class="form-control" id="grandTotal" name="GrandTotal" value="@Model.GrandTotal" />
                                </div>
                            </div>


                            <div class="col-md-4">

                                <div class="form-group">
                                    <label for="paymentStatus">Payment Status</label>
                                    <select class="form-control" id="myDropdown">
                                        <option value="">Select</option>
                                        <option value="option1">Pending</option>
                                        <option value="option2">Settled</option>

                                    </select>
                                </div>
                            </div>


                    </div>




                    <div style="display: flex; justify-content: center; padding:10px">
                        <button type="submit" class="btn btn-outline-dark">Create</button>
                    </div>
                </div>
            </div>


        </form>

            @*/END/*@

    </div>

    <partial name="_RightColumn" />
</div>





<script src="~/js/DateTime.js"></script>


<script>
    var shippingAddressTextarea = document.getElementById("shippingAddress");
    var billingAddressTextarea = document.getElementById("billingAddress");
    var sameAddressCheckbox = document.getElementById("sameAddressCheckbox");

    sameAddressCheckbox.addEventListener("change", function () {
        if (this.checked) {
            billingAddressTextarea.value = shippingAddressTextarea.value;
            billingAddressTextarea.disabled = true;
            billingAddressTextarea.classList.add("text-muted");
        } else {
            billingAddressTextarea.value = "";
            billingAddressTextarea.disabled = false;
            billingAddressTextarea.classList.remove("text-muted");
        }
    });
</script>

<script>
    var productContainer = document.getElementById("product-container");
    var addProductButton = document.getElementById("add-product");
    var productIndex = 1;

    addProductButton.addEventListener("click", function () {
        var newProductField = document.createElement("div");
        newProductField.classList.add("order-item");

        newProductField.innerHTML = `
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label for="productName">Product Name:</label>
                                    <input type="text" class="form-control product-name" name="CustomerOrderItems[${productIndex}].ProductName" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="quantity">Quantity:</label>
                                    <input type="text" class="form-control quantity" name="CustomerOrderItems[${productIndex}].Quantity" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="unitPrice">Unit Price:</label>
                                    <input type="text" class="form-control unit-price" name="CustomerOrderItems[${productIndex}].UnitPrice" />
                                </div>
                            </div>
                            <div class="col-md-2">
                                <div class="form-group">
                                    <label for="lineTotal">Line total:</label>
                                    <input type="text" class="form-control line-total" name="CustomerOrderItems[${productIndex}].LineTotal" />
                                </div>
                            </div>
                        </div>`;

        productContainer.appendChild(newProductField);
        productIndex++;
    });
</script>




    <script>
        function getCustomerOrderDetails() {
            var customerOrderId = document.getElementById("orderNo").value;
            if (customerOrderId) {
                fetch(`/Customer/GetCustomerOrderDetails?customerOrderId=${customerOrderId}`)
                    .then(response => response.json())
                    .then(data => {
                        console.log("Response from server:", data);
                        if (data) {

                            console.log("Customer ID:", data.customerId);
                            console.log("Customer Name:", data.customerName);
                            console.log("Shipping Address:", data.shippingAddress);


                            // Update the form fields with the retrieved data
                            document.getElementById("customerId").value = data.customerId;
                            document.getElementById("customerName").value = data.customerName;
                            document.getElementById("shippingAddress").value = data.shippingAddress;


                            document.getElementById("invoiceTotal").value = data.customerOrderTotal;
                            document.getElementById("taxAmount").value = data.taxAmount;
                            document.getElementById("taxRate").value = data.taxRate;

                            updateOrderItems(data.customerOrderItems);


                        } else {
                            
                            alert("CustomerOrder not found.");
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        alert("An error occurred while fetching data.");
                    });
            }
        }



        function updateOrderItems(orderItems) {
            // Remove all existing order items
            var productContainer = document.getElementById("product-container");
            productContainer.innerHTML = "";


            var invoiceTotal = 0;



            // Create and add new order item fields
            orderItems.forEach((item, index) => {
                var newProductField = document.createElement("div");
                newProductField.classList.add("order-item");

                newProductField.innerHTML = `
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-group">
                                <label for="productName">Product Name:</label>
                                <input type="text" class="form-control product-name" name="CustomerOrderItems[${index}].ProductName" value="${item.productName}" />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="quantity">Quantity:</label>
                                <input type="text" class="form-control quantity" name="CustomerOrderItems[${index}].Quantity" value="${item.quantity}" />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="unitPrice">Unit Price:</label>
                                <input type="text" class="form-control unit-price" name="CustomerOrderItems[${index}].UnitPrice" value="${item.unitPrice}" />
                            </div>
                        </div>
                        <div class="col-md-2">
                            <div class="form-group">
                                <label for="lineTotal">Line total:</label>
                                <input type="text" class="form-control line-total" name="CustomerOrderItems[${index}].LineTotal" value="${item.lineTotal}" />
                            </div>
                        </div>
                    </div>`;

                productContainer.appendChild(newProductField);




                //var lineTotal = item.quantity * item.unitPrice;
                //invoiceTotal += lineTotal;

                //// Set the line total value for the current order item in the form
                //var lineTotalInput = newProductField.querySelector(".line-total");
                //lineTotalInput.value = lineTotal;




            });


            //var invoiceTotalField = document.getElementById("invoiceTotal");
            //invoiceTotalField.value = invoiceTotal;
        }



        function calculateGrandTotal() {
            // Get the values from the corresponding fields
            var invoiceTotal = parseFloat(document.getElementById("invoiceTotal").value);
            var taxAmount = parseFloat(document.getElementById("taxAmount").value);
            var discount = parseFloat(document.getElementById("discount").value);

            // Calculate the grand total
            var grandTotal = invoiceTotal + taxAmount - discount;

            // Populate the grand total field
            document.getElementById("grandTotal").value = grandTotal;
        }

        // Call the calculateGrandTotal function whenever the discount field changes
        document.getElementById("discount").addEventListener("change", calculateGrandTotal);





    </script>










</body>
</html>
