@model UserRolesNew.ViewModels.Customer.CustomerOrderVm


<style>
    body {
        background-color: #E1F5FE;
    }

    .header {
        background-color: #E1F5FE;
        color: #FFFFFF;
        padding: 15px;
    }

    /*.column {
                            background-color: #FFFFFF;
                            border: 1px solid #B0BEC5;
                            padding: 20px;
                            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
                        }*/




    .column {
        padding: 20px;
        position: relative;
    }

        .column:before {
            content: "";
            position: absolute;
            top: 0;
            bottom: 0;
            left: -5px;
            right: -5px;
            /*background: linear-gradient(to right, transparent, rgba(0, 0, 0, 0.1) 100%, transparent);*/
            background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 95%, rgba(255, 255, 255, 1) 95%, rgba(255, 255, 255, 0));
            z-index: -1;
        }


    .col-md-2.column:first-child {
        background-color: #c8e3fa;
        box-shadow: 10px 0 20px rgba(0, 0, 0, 0.1);
    }

    .col-md-8.column:nth-child(2) {
        background-color: #D1EAFD;
        box-shadow: -10px 0 20px rgba(0, 0, 0, 0.1), 10px 0 20px rgba(0, 0, 0, 0.1);
    }

    .col-md-2.column:last-child {
        background-color: #c8e3fa;
        box-shadow: -10px 0 20px rgba(0, 0, 0, 0.1);
    }


    .search-box {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: row;
        margin-top: 20px;
        border-radius: 50px;
    }

    .mdc-text-field {
        width: 200px;
        display: flex;
        align-items: center;
    }

    .mdc-text-field__input {
        text-align: center;
        padding-right: 14px; /* Adjust padding to accommodate the lens icon */
        border-radius: 10px;
    }

    .mdc-text-field__icon {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        pointer-events: none;
        color: rgba(0, 0, 0, 0.54);
    }

    .mdc-button {
        margin-left: 10px;
    }



    .card-mini {
        max-width: 200px; /* Adjust the maximum width as desired */
        height: auto; /* Adjust the height as desired */
        padding: 10px; /* Adjust the padding as desired */
    }

    .row {
        margin-bottom: 20px;
        margin-top: 20px;
    }

    .left-menu {
        padding-top: 40px;
        padding-left: 40px;
        font-size: 19px;
    }

    .date {
        font-size: 25px;
    }

    .time {
        font-size: 19px;
    }

    .right-menu {
        padding-top: 40px;
        padding-left: 40px;
        font-size: 19px;
    }

</style>


<div class="row">
    @* <div class="col-md-12 header">
    <h2>Header</h2>
    <p>Header content goes here.</p>
    </div>*@
</div>
<div class="row">
    <div class="col-md-2 column">
        <h3>XYZ Medicals</h3>
        <h5>Abc Ave, PA</h5>


        <div class="left-menu">


            <a asp-action="index" asp-controller="Product" style="text-decoration: none;"><p>Products</p></a>
            <a asp-action="index" asp-controller="Suppliers" style="text-decoration: none;"><p>Suppliers</p></a>

            <p>Manufacturers</p>

            <a asp-action="index" asp-controller="Facilities" style="text-decoration: none;"><p>Facilities</p></a>
            <a asp-action="NPILookup" asp-controller="Home" style="text-decoration: none;"><p>Doctors</p></a>

        </div>


    </div>
    <div class="col-md-8 column">

        <div class="search-box">

            <div class="mdc-text-field">
                <input type="text" class="mdc-text-field__input" id="search-input">

                @*<i class="material-icons mdc-text-field__icon">search</i>*@

                <div class="mdc-line-ripple"></div>
            </div>

            @* <button class="mdc-button mdc-button--raised">
            <span class="mdc-button__ripple"></span>
            <span class="material-icons">Go!</span>
            </button>*@
            <button type="button" class="btn btn-outline-dark btn-sm" ">Go!</button>
        </div>




            @*//following div (row) is the dynamic content of this page, it changes on each other page view redirected from here.
        everything else remain the same*@




        <h3>Customer Order</h3>

        <form method="post" asp-action="CreateOrder">

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label for="customerId">Customer ID:</label>
                        <input type="text" class="form-control" id="customerId" name="CustomerId" value="@Model.CustomerId" />
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group">
                        <label for="customerName">Customer Name:</label>
                        <input type="text" class="form-control" id="orderDate" name="Date" value="@Model.CustomerName" />
                    </div>
                </div>



                <div class="col-md-4">
                    <div class="form-group">
                        <label for="orderDate">Order Date:</label>
                        <input type="text" class="form-control" id="orderDate" name="Date" value="@Model.Date.ToShortDateString()" />
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="shippingAddress">Shipping Address:</label>
                        <textarea class="form-control" id="shippingAddress" name="ShippingAddress" rows="3">@Model.ShippingAddress</textarea>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="billingAddress">Billing Address:</label>
                        <textarea class="form-control" id="billingAddress" name="BillingAddress" rows="3">@Model.BillingAddress</textarea>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="sameAddressCheckbox">
                        <label class="form-check-label" for="sameAddressCheckbox">Same as Shipping Address</label>
                    </div>
                </div>
            </div>


            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="createdDate">Created Date:</label>
                        <input type="text" class="form-control" id="createdDate" name="CreatedDate" value="@Model.CreatedDate.ToShortDateString()" />
                    </div>
                </div>

                <div class="col-md-6">

                    <div class="form-group">
                        <label for="updatedDate">Updated Date:</label>
                        <input type="text" class="form-control" id="updatedDate" name="UpdatedDate" value="@Model.UpdatedDate.ToShortDateString()" />
                    </div>
                </div>

            </div>

            <!-- Order Item Details -->

            <h3>Items</h3>



            <div id="product-container">
                <!-- Initial product field -->
                <div class="order-item">

                    <div class="row">
                        <div class="col-md-6">

                            <div class="form-group">
                                <label for="productName">Product Name:</label>
                                <input type="text" class="form-control product-name" name="CustomerOrderItems[0].ProductName" />
                            </div>
                        </div>

                        <div class="col-md-2">


                            <div class="form-group">
                                <label for="quantity">Quantity:</label>
                                <input type="text" class="form-control quantity" name="CustomerOrderItems[0].Quantity" />
                            </div>
                        </div>




                        <div class="col-md-2">

                            <div class="form-group">
                                <label for="unitPrice">Unit Price:</label>
                                <input type="text" class="form-control unit-price" name="CustomerOrderItems[0].UnitPrice" />
                            </div>

                        </div>

                        <div class="col-md-2">



                            <div class="form-group">
                                <label for="lineTotal">Line total:</label>
                                <input type="text" class="form-control line-total" name="CustomerOrderItems[0].LineTotal" />
                            </div>

                        </div>
                    </div>





                </div>
            </div>

            <div style="display: flex; justify-content: flex-end;">
                <button type="button" id="add-product" class="btn btn-primary btn-sm"> Add </button>
            </div>











            <div class="row">
                <div class="col-md-4">

                    <div class="form-group">
                        <label for="taxRate">Order Total:</label>
                        <input type="text" class="form-control" id="taxRate" name="OrderTotal" value="@Model.CustomerOrderTotal" />
                    </div>

                </div>

                <div class="col-md-2">
                    <div class="form-group">
                        <label for="taxAmount">Tax Rate:</label>
                        <input type="text" class="form-control" id="taxRate" name="TaxRate" value="@Model.TaxRate" />
                    </div>
                </div>

                <div class="col-md-2">

                    <div class="form-group">
                        <label for="taxAmount">Tax Amount:</label>
                        <input type="text" class="form-control" id="taxAmount" name="TaxAmount" value="@Model.TaxAmount" />
                    </div>
                </div>

                <div class="col-md-4">

                    <div class="form-group">
                        <label for="grandTotal">Grand Total:</label>
                        <input type="text" class="form-control" id="grandTotal" name="GrandTotal" value="@Model.GrandTotal" />
                    </div>
                </div>


            </div>




            <div style="display: flex; justify-content: flex-center;">
                <button type="submit" class="btn btn-primary">Create</button>
            </div>

       

        </form>










        @*/END/*@





    </div>




    <div class="col-md-2 column">

        <div id="date-time" class="date-time">
            <p class="date"></p>
            <p class="time"></p>

        </div>


        <div class="right-menu">

            @if (User.IsInRole("Admin"))
            {
                <a href="/AdminDashboard/Index" style="text-decoration: none;"><p>Dashboard</p></a>
            }
            else
            {
                <a href="/UserDashboard/Index" style="text-decoration: none;"><p>Dashboard</p></a>
            }
            <p>Reports</p>
            @*<p>Inventory</p>*@

            @if (User.IsInRole("Admin"))
            {
                <a href="/Inventory/Index" style="text-decoration: none;"><p>Inventory</p></a>
            }
            else
            {
                @*<a href="/UserDashboard/Index" style="text-decoration: none;"><p>Dashboard</p></a>*@
            }












        </div>


    </div>
</div>




<script src="https://cdnjs.cloudflare.com/ajax/libs/material-components-web/11.0.0/material-components-web.min.js"></script>
<script>
    mdc.textField.MDCTextField.attachTo(document.querySelector('.mdc-text-field'));
    mdc.button.MDCRipple.attachTo(document.querySelector('.mdc-button'));
</script>

<script>
    function updateTime() {
        var currentDate = new Date();
        var date = currentDate.toDateString();
        var time = currentDate.toLocaleTimeString();
        var dateElement = document.querySelector('.date');
        var timeElement = document.querySelector('.time');
        dateElement.textContent = date;
        timeElement.textContent = time;
    }

    // Update the time every second
    setInterval(updateTime, 1000);

    // Initial update
    updateTime();
</script>


<script>
    var shippingAddressTextarea = document.getElementById("shippingAddress");
    var billingAddressTextarea = document.getElementById("billingAddress");
    var sameAddressCheckbox = document.getElementById("sameAddressCheckbox");

    sameAddressCheckbox.addEventListener("change", function () {
        if (this.checked) {
            billingAddressTextarea.value = shippingAddressTextarea.value;
            billingAddressTextarea.disabled = true;
            billingAddressTextarea.classList.add("text-muted");
        } else {
            billingAddressTextarea.value = "";
            billingAddressTextarea.disabled = false;
            billingAddressTextarea.classList.remove("text-muted");
        }
    });
</script>
