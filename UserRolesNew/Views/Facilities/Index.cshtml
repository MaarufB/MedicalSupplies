@model List<UserRolesNew.ViewModels.Facility.FacilityVm>

<html>
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/material-components-web/11.0.0/material-components-web.min.css" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
</head>

<style>
    body {
        background-color: #E1F5FE;
    }

    .header {
        background-color: #E1F5FE;
        color: #FFFFFF;
        padding: 15px;
    }

    .column {
        padding: 20px;
        position: relative;
    }

        .column:before {
            content: "";
            position: absolute;
            top: 0;
            bottom: 0;
            left: -5px;
            right: -5px;
            background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1) 95%, rgba(255, 255, 255, 1) 95%, rgba(255, 255, 255, 0));
            z-index: -1;
        }

    .col-md-2.column:first-child {
        background-color: #c8e3fa;
        box-shadow: 10px 0 20px rgba(0, 0, 0, 0.1);
    }

    .col-md-8.column:nth-child(2) {
        background-color: #D1EAFD;
        box-shadow: -10px 0 20px rgba(0, 0, 0, 0.1), 10px 0 20px rgba(0, 0, 0, 0.1);
    }

    .col-md-2.column:last-child {
        background-color: #c8e3fa;
        box-shadow: -10px 0 20px rgba(0, 0, 0, 0.1);
    }

    .search-box {
        display: flex;
        align-items: center;
        justify-content: center;
        flex-direction: row;
        margin-top: 20px;
        border-radius: 50px;
    }

    .mdc-text-field {
        width: 200px;
        display: flex;
        align-items: center;
    }

    .mdc-text-field__input {
        text-align: center;
        padding-right: 14px;
        border-radius: 10px;
    }

    .mdc-text-field__icon {
        position: absolute;
        right: 10px;
        top: 50%;
        transform: translateY(-50%);
        pointer-events: none;
        color: rgba(0, 0, 0, 0.54);
    }

    .mdc-button {
        margin-left: 10px;
    }

    .card-mini {
        max-width: 200px;
        height: auto;
        padding: 10px;
    }

    .row {
        margin-bottom: 20px;
        margin-top: 20px;
    }

    .left-menu {
        padding-top: 40px;
        padding-left: 40px;
        font-size: 19px;
    }

    .date {
        font-size: 25px;
    }

    .time {
        font-size: 19px;
    }

    .right-menu {
        padding-top: 40px;
        padding-left: 40px;
        font-size: 19px;
    }
</style>

<body>
    <div class="row">
        <div class="col-md-2 column">
            <h3>XYZ Medicals</h3>
            <h5>Abc Ave, PA</h5>
            <div class="left-menu">
                <a asp-action="index" asp-controller="Product" style="text-decoration: none;"><p>Products</p></a>
                <a asp-action="index" asp-controller="Suppliers" style="text-decoration: none;"><p>Suppliers</p></a>
                <p>Manufacturers</p>
                <a asp-action="index" asp-controller="Facilities" style="text-decoration: none;"><p>Facilities</p></a>
                <a asp-action="NPILookup" asp-controller="Home" style="text-decoration: none;"><p>Doctors</p></a>
            </div>
        </div>

        <div class="col-md-8 column">
            <div class="search-box">
                <div class="mdc-text-field">
                    <input type="text" class="mdc-text-field__input" id="search-input">
                    <div class="mdc-line-ripple"></div>
                </div>
                <button type="button" class="btn btn-outline-dark btn-sm">Go!</button>
            </div>
            <div class="facilities">
                <h3>Facilities List</h3>
                <div id="map"></div>
            </div>
        </div>

        <div class="col-md-2 column">
            <div id="date-time" class="date-time">
                <p class="date"></p>
                <p class="time"></p>
            </div>
            <div class="right-menu">
                @if (User.IsInRole("Admin"))
                {
                    <a href="/AdminDashboard/Index" style="text-decoration: none;"><p>Dashboard</p></a>
                }
                else
                {
                    <a href="/UserDashboard/Index" style="text-decoration: none;"><p>Dashboard</p></a>
                }
                <p>Reports</p>
                @if (User.IsInRole("Admin"))
                {
                    <a href="/Inventory/Index" style="text-decoration: none;"><p>Inventory</p></a>
                }
                else
                {
                    <a href="/Home/AccessDenied" style="text-decoration: none;"><p>Inventory</p></a>
                }
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/material-components-web/11.0.0/material-components-web.min.js"></script>
    <script>
        function updateTime() {
            var currentDate = new Date();
            var date = currentDate.toDateString();
            var time = currentDate.toLocaleTimeString();
            var dateElement = document.querySelector('.date');
            var timeElement = document.querySelector('.time');
            dateElement.textContent = date;
            timeElement.textContent = time;
        }
        setInterval(updateTime, 1000);
        updateTime();
    </script>

    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>

    <script>
        var facilities = @Html.Raw(Json.Serialize(Model));

        // Create the map
        var map = L.map('map').setView([26.513120, -80.122200], 10);

        // Add the OpenStreetMap tile layer to the map
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(map);

        // Define a global callback function for JSONP
        window.processAddress = function (data, facility, fullAddress) {
            if (data.length > 0) {
                var place = data[0];
                var latitude = place.lat;
                var longitude = place.lon;

                // Add a marker to the map for each facility
                var marker = L.marker([latitude, longitude]).addTo(map);
                marker.bindPopup('<b>' + facility.facilityName + '</b><br>' + fullAddress);
            }
        };

        // Loop through the facilities
        facilities.forEach(function (facility) {
            facility.facilityAddresses.forEach(function (address) {
                var fullAddress = address.address + ', ' + address.city + ', ' + address.zip;
                console.log(fullAddress);

                // Create a script element for JSONP request
                var script = document.createElement('script');
               
                script.src = 'https://nominatim.openstreetmap.org/lookup?format=json&extratags=1&q=' + encodeURIComponent(fullAddress) + '&json_callback=processAddress.bind(null, data, ' + JSON.stringify(facility) + ', \'' + fullAddress + '\')';

                document.head.appendChild(script);
            });
        });
    </script>




</body>
</html>
